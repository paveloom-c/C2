name: RotationKernel
doc: The covariance function taken from Foreman-Mackey (2017)
stationary: false
params: [log_amp, log_timescale, log_period, log_factor]

reparams:
    a: return exp(log_amp);
    t: return exp(log_timescale);
    p: return exp(log_period);
    f: return exp(log_factor);
    pi: return 4 * atan(1.0);

value: return a/(2 + f) * exp(-abs(x1-x2)/t) * (cos(2*pi*abs(x1-x2)/p) + 1 + f);

grad:
    x1: |
        double f_2 = f+2,
               two_pi = 2*pi,
               two_pi_p = two_pi/p,
               xd = x2-x1,
               xd_abs = abs(xd),
               exp_m_xd_abs_t = exp(-xd_abs/t),
               arg = two_pi_p*xd_abs;
        return two_pi*a*xd*exp_m_xd_abs_t*sin(arg)/(f_2*p*xd_abs)+a*xd*exp_m_xd_abs_t*(cos(arg)+f+1)/(f_2*t*xd_abs);
    x2: |
        double ma = -a,
               f_2 = f+2,
               two_pi = 2*pi,
               two_pi_p = two_pi/p,
               xd = x2-x1,
               xd_abs = abs(xd),
               exp_m_xd_abs_t = exp(-xd_abs/t),
               arg = two_pi_p*xd_abs;
        return two_pi*ma*xd*exp_m_xd_abs_t*sin(arg)/(f_2*p*xd_abs)+ma*xd*exp_m_xd_abs_t*(cos(arg)+f+1)/(f_2*t*xd_abs);
    log_amp: |
        double xd_abs = abs(x2-x1);
        return a*exp(-xd_abs/t)*(cos(2*pi*xd_abs/p)+f+1)/(f+2);
    log_timescale: |
        return (a*exp((-exp(-log(t))*abs(x2-x1))-log(t))*abs(x2-x1)*(cos((2*pi*abs(x2-x1))/p)+f+1))/(f+2);
    log_period: |
        return (2*a*pi*exp((-abs(x2-x1)/t)-log(p))*abs(x2-x1)*sin(2*exp(-log(p))*pi*abs(x2-x1)))/(f+2);
    log_factor: |
        return (a*exp(log(f)-abs(x2-x1)/t))/(exp(log(f))+2)-(a*exp(log(f)-abs(x2-x1)/t)*(cos((2*pi*abs(x2-x1))/p)+exp(log(f))+1))/(pow(exp(log(f))+2,2));