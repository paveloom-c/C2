name: RotationKernel
doc: The covariance function taken from Foreman-Mackey (2017)
stationary: false
params: [log_amp, log_timescale, log_period, log_factor]

reparams:
    a: return exp(log_amp);
    t: return exp(log_timescale);
    p: return exp(log_period);
    f: return exp(log_factor);
    pi: return 4 * atan(1.0);
    f_2: return exp(log_factor) + 2;
    two_pi: return 8 * atan(1.0);
    two_pi_p: return 8 * atan(1.0) / exp(log_period);

value: |
    double xd_abs = abs(x2-x1);
    return a/f_2*exp(-xd_abs/t)*(cos(two_pi_p*xd_abs)+1+f);

grad:
    x1: |
        double xd = x2-x1,
               xd_abs = abs(xd),
               exp_m_xd_abs_t = exp(-xd_abs/t),
               arg = two_pi_p*xd_abs;
        return two_pi*a*xd*exp_m_xd_abs_t*sin(arg)/(f_2*p*xd_abs)+a*xd*exp_m_xd_abs_t*(cos(arg)+f+1)/(f_2*t*xd_abs);
    x2: |
        double ma = -a,
               xd = x2-x1,
               xd_abs = abs(xd),
               exp_m_xd_abs_t = exp(-xd_abs/t),
               arg = two_pi_p*xd_abs;
        return two_pi*ma*xd*exp_m_xd_abs_t*sin(arg)/(f_2*p*xd_abs)+ma*xd*exp_m_xd_abs_t*(cos(arg)+f+1)/(f_2*t*xd_abs);
    log_amp: |
        double xd_abs = abs(x2-x1);
        return a*exp(-xd_abs/t)*(cos(two_pi_p*xd_abs)+f+1)/f_2;
    log_timescale: |
        double xd_abs = abs(x2-x1),
               xd_abs_t = xd_abs/t;
        return a*exp(-xd_abs/t)*xd_abs_t*(cos(two_pi_p*xd_abs)+f+1)/f_2;
    log_period: |
        double xd_abs = abs(x2-x1);
        return two_pi_p*a*exp(-xd_abs/t)*xd_abs*sin(two_pi_p*xd_abs)/f_2;
    log_factor: |
        double xd_abs = abs(x2-x1),
               exp_v = a*f*exp(-xd_abs/t)/f_2;
        return exp_v-exp_v*(cos(two_pi_p*xd_abs)+f+1)/f_2;